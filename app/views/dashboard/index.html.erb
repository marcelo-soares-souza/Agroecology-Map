<style>
  .practices-box {
      border: 1px solid #dedee0;
      max-width: 1000px;
      padding: 18px 8px;
      margin: 8px auto 20px;
  }

  canvas {
    width: 100%;
    max-width: 98% !important;
    max-height: 1000px !important;
  }
</style>
<div class="tab-content" style="min-height: 64px;">
  <div class="tab-pane active">
    <br>
    <div class="practices-box">
      <div style="text-align: left;">
        <b>Total Location: </b><%= @locations_count %>
        <br>
        <b>Total Experiences in Agroecology: </b> <%= @experiences_in_agroecology_count %>
        <br>
        <b>Total Agroforestry Systems: </b> <%= @saf_count %>
        <br>
        <b>Total Contributors: </b> <%= @contributors_count %>
      </div>
    </div>
  </div>
  <div class="tab-pane active">
    <div class="practices-box">
      <h4>Agroecology locations per country</h4>
      <div id="regions_div"></div>
    </div>
  </div>
  <div class="practices-box">
    <h4>Locations by type</h4>
    <div style="margin-left: auto; margin-right: auto;">
      <canvas id="location-by-type"></canvas>
    </div>
  </div>
  <div class="practices-box">
    <h4>Agroecology experiences by main theme</h4>
    <div style="margin-left: auto; margin-right: auto;">
      <canvas id="experience-by-theme"></canvas>
    </div>
  </div>
</div>
<!-- Scripts -->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
  google.charts.load('current', {
    'packages':['geochart'],
  });

  google.charts.setOnLoadCallback(drawRegionsMap);

  countries = []
  countries.push(['Country', 'Locations'])

  <% @location_by_country.each do |country| %>
      countries.push(['<%= country[0] %>', <%= country[1] %>])
  <% end %>

  function drawRegionsMap() {
    var data = google.visualization.arrayToDataTable(countries);
    var options = {};
    options['legend'] = 'none';
    var chart = new google.visualization.GeoChart(document.getElementById('regions_div'));
    chart.draw(data, options);
  }
  window.onresize = drawRegionsMap;
</script>
<script>
  const ctxByType = document.getElementById('location-by-type');

  data_by_type = []
  labels_by_type = []
  <% @location_by_type.each do |by_type| %>
    labels_by_type.push('<%= @tipos.key(by_type[0]) %> (<%= by_type[1] %>)')
    data_by_type.push('<%= by_type[1] %>')
  <% end %>

  const datasetByType = [{
      label: '',
      data: data_by_type,
      backgroundColor: [
      'rgba(255, 99, 132, 0.5)',
      'rgba(45, 192, 192, 0.5)',
      'rgba(100, 162, 235, 0.5)',
      'rgba(253, 102, 255, 0.5)',
      'rgba(250, 200, 207, 0.5)',
      'rgba(255, 250, 207, 0.5)',

    ],
    }]
  const optionsByType ={
    responsive: true,
    maintainAspectRatio: true,
  }

  var chart_by_type = new Chart(ctxByType, {
    type: 'doughnut',
    data: {
      labels: labels_by_type,
      datasets: datasetByType,
    },
    options: optionsByType,
  });

  chart_by_type.canvas.parentNode.style.height = '500px';
  chart_by_type.canvas.parentNode.style.width = '500px';
  chart_by_type.update();
</script>
<script>
  const ctxByTheme = document.getElementById('experience-by-theme');

  data_experience_by_theme = []
  labels_experience_by_theme = []
  <% @experience_by_theme.each do |experience| %>
    labels_experience_by_theme.push('<%= @tema_experiencia_agroecologicas.key(experience[0].id).truncate(35) %> (<%= experience[1] %>)')
    data_experience_by_theme.push('<%= experience[1] %>')
  <% end %>

  const datasetByTheme = [{
      label: '',
      data: data_experience_by_theme,
      backgroundColor: [
      'rgba(255, 99, 0.5, 0.5)',
      'rgba(75, 192, 0.5, 0.5)',
      'rgba(255, 205, 0.5, 0.5)',
      'rgba(201, 203, 0.5, 0.5)',
      'rgba(54, 162, 0.5, 0.5)',
      'rgba(54, 112, 0.5, 0.5)',
      'rgba(154, 102, 0.5, 0.5)',
      'rgba(74, 90, 0.5, 0.5)',
      'rgba(74, 40, 0.5, 0.5)',
      'rgba(255, 99, 132, 0.5)',
      'rgba(255, 159, 64, 0.5)',
      'rgba(255, 255, 86, 0.5)',
      'rgba(75, 102, 192, 0.5)',
      'rgba(54, 162, 235, 0.5)',
      'rgba(153, 102, 255, 0.5)',
      'rgba(251, 223, 207, 0.5)'
      ],
    }]
  const optionsByTheme ={
    responsive: true,
    scaleShowValues: true,
    plugins: {
      legend: {
        display: false
      }
    },
    scales: {
      xAxes: [{
        ticks: {
          autoSkip: false
        }
      }]
  },
  }

  var chart_by_theme = new Chart(ctxByTheme, {
    type: 'bar',
    data: {
      labels: labels_experience_by_theme,
      datasets: datasetByTheme,
    },
    options: optionsByTheme,
  });

  chart_by_theme.update();
</script>
